#!/bin/bash
# Squelch IP Banning Utility

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

usage() {
    echo "Usage: $0 {ban|unban|list|check} [IP] [jail]"
    echo
    echo "Commands:"
    echo "  ban IP [jail]     - Ban an IP address (default: sshd jail)"
    echo "  unban IP [jail]   - Unban an IP address (default: sshd jail)"
    echo "  list [jail]       - List banned IPs (all jails or specific jail)"
    echo "  check IP          - Check if IP is banned"
    echo
    echo "Examples:"
    echo "  $0 ban 192.168.1.100"
    echo "  $0 unban 192.168.1.100 squelch-caddy-auth"
    echo "  $0 list"
    echo "  $0 check 10.0.0.1"
    exit 1
}

validate_ip() {
    local ip=$1
    if [[ ! $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        echo -e "${RED}Error: Invalid IP address format${NC}"
        exit 1
    fi
}

ban_ip() {
    local ip=$1
    local jail=${2:-sshd}

    validate_ip "$ip"

    echo -e "${YELLOW}Banning IP $ip in jail $jail...${NC}"
    if fail2ban-client set "$jail" banip "$ip"; then
        echo -e "${GREEN}✓ Successfully banned $ip${NC}"
    else
        echo -e "${RED}✗ Failed to ban $ip${NC}"
        exit 1
    fi
}

unban_ip() {
    local ip=$1
    local jail=${2:-sshd}

    validate_ip "$ip"

    echo -e "${YELLOW}Unbanning IP $ip from jail $jail...${NC}"
    if fail2ban-client set "$jail" unbanip "$ip"; then
        echo -e "${GREEN}✓ Successfully unbanned $ip${NC}"
    else
        echo -e "${RED}✗ Failed to unban $ip (may not be banned)${NC}"
        exit 1
    fi
}

list_banned() {
    local jail=$1

    echo -e "${BLUE}=== Banned IP Addresses ===${NC}"

    if [ -z "$jail" ]; then
        # List all jails
        for j in $(fail2ban-client status | grep "Jail list:" | cut -d: -f2 | tr ',' ' '); do
            j=$(echo $j | xargs)
            if [ ! -z "$j" ]; then
                echo -e "\n${YELLOW}Jail: $j${NC}"
                banned_list=$(fail2ban-client status "$j" | grep "Banned IP list:" | cut -d: -f2)
                if [ -z "$banned_list" ] || [ "$banned_list" = " " ]; then
                    echo "  No banned IPs"
                else
                    echo "$banned_list" | tr ' ' '\n' | sed '/^$/d' | sed 's/^/  /'
                fi
            fi
        done
    else
        # List specific jail
        echo -e "${YELLOW}Jail: $jail${NC}"
        banned_list=$(fail2ban-client status "$jail" | grep "Banned IP list:" | cut -d: -f2)
        if [ -z "$banned_list" ] || [ "$banned_list" = " " ]; then
            echo "  No banned IPs"
        else
            echo "$banned_list" | tr ' ' '\n' | sed '/^$/d' | sed 's/^/  /'
        fi
    fi
}

check_ip() {
    local ip=$1

    validate_ip "$ip"

    echo -e "${BLUE}Checking ban status for IP: $ip${NC}"

    local found=false
    for jail in $(fail2ban-client status | grep "Jail list:" | cut -d: -f2 | tr ',' ' '); do
        jail=$(echo $jail | xargs)
        if [ ! -z "$jail" ]; then
            banned_list=$(fail2ban-client status "$jail" | grep "Banned IP list:" | cut -d: -f2)
            if echo "$banned_list" | grep -q "$ip"; then
                echo -e "  ${RED}✗ BANNED in jail: $jail${NC}"
                found=true
            fi
        fi
    done

    if [ "$found" = false ]; then
        echo -e "  ${GREEN}✓ Not banned${NC}"
    fi
}

# Main script
case "$1" in
    ban)
        if [ -z "$2" ]; then
            echo -e "${RED}Error: IP address required${NC}"
            usage
        fi
        ban_ip "$2" "$3"
        ;;
    unban)
        if [ -z "$2" ]; then
            echo -e "${RED}Error: IP address required${NC}"
            usage
        fi
        unban_ip "$2" "$3"
        ;;
    list)
        list_banned "$2"
        ;;
    check)
        if [ -z "$2" ]; then
            echo -e "${RED}Error: IP address required${NC}"
            usage
        fi
        check_ip "$2"
        ;;
    *)
        usage
        ;;
esac